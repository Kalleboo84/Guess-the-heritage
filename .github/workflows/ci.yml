name: CI - Comprehensive Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ${{ github.workspace }}/.dart_tool
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            flutter-${{ runner.os }}-

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: stable

      - name: Verify Flutter installation
        run: |
          flutter --version
          flutter doctor -v

      - name: Install dependencies
        run: flutter pub get

      - name: Verify dependencies
        run: flutter pub deps

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: |
          flutter analyze --no-fatal-infos
          echo "✅ Flutter analysis completed"

      - name: Check formatting
        run: |
          dart format --output=none --set-exit-if-changed .
          echo "✅ Code formatting check completed"

  python_scripts:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: python-${{ runner.os }}-${{ hashFiles('scripts/requirements.txt') }}
          restore-keys: |
            python-${{ runner.os }}-

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install requests tqdm
          if [ -f scripts/requirements.txt ]; then
            pip install -r scripts/requirements.txt
          fi

      - name: Validate Python scripts
        run: |
          echo "Validating Python scripts..."
          python -m py_compile scripts/fill_commons_metadata.py
          python -m py_compile tool/fill_commons_images.py
          echo "✅ Python scripts validation completed"

      - name: Check Python script help
        run: |
          echo "Testing script help..."
          python scripts/fill_commons_metadata.py --help || echo "No help available for fill_commons_metadata.py"
          echo "✅ Python script help check completed"

      - name: Run validation script
        run: |
          echo "Running comprehensive validation..."
          python scripts/validate.py